service: lambda-proxy # NOTE: update this with your service name
frameworkVersion: ">=1.28.0 <2.0.0"

provider:
  name: aws
  runtime: go1.x
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  profile: sls-admin
  apiGateway:
    binaryMediaTypes:
      - "application/protobuf"

  iamRoleStatements:
    - Effect: Allow
      Action:
        - "dynamodb:ListTables"
        - "dynamodb:DescribeTable"
        - "dynamodb:DescribeStream"
        - "dynamodb:ListStreams"
        - "dynamodb:GetShardIterator"
        - "dynamodb:BatchGetItem"
        - "dynamodb:GetItem"
        - "dynamodb:DeleteItem"
        - "dynamodb:Query"
        - "dynamodb:Scan"
        - "dynamodb:DescribeReservedCapacity"
        - "dynamodb:DescribeReservedCapacityOfferings"
        - "dynamodb:GetRecords"
      Resource:
        - { "Fn::GetAtt": ["PuppyDemo", "Arn"] }

package:
  exclude:
    - ./**
  include:
    - ./build/**

functions:
  puppies:
    name: puppies
    handler: build/puppies
    memorySize: 128
    timeout: 60
    events:
      - http:
          method: any
          path: /{proxy+}
          cors: true

resources:
  Resources:
    PuppyDemo:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Retain
      Properties:
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: name
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TableName: puppies
